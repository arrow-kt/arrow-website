<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Arrow Blog</title>
        <link>https://arrow-kt.io/community/blog</link>
        <description>Arrow Blog</description>
        <lastBuildDate>Wed, 28 Feb 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Arrow 1.2.3 release]]></title>
            <link>https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3</link>
            <guid>https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3</guid>
            <pubDate>Wed, 28 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[We are happy to announce the availability of version 1.2.3 of the Arrow collection of libraries.]]></description>
            <content:encoded><![CDATA[<p>We are happy to announce the availability of version 1.2.3 of the Arrow collection of libraries.
According to our plan, this is the last non-bugfix release of the 1.x series.
From now on, our <code>main</code> branch targets Arrow 2.0, which should be the next major release.</p>
<p>We are incredibly thankful to the many people that have contributed to this release,
bringing new ideas and quite some code.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 23c6.075 0 11-4.925 11-11S18.075 1 12 1 1 5.925 1 12s4.925 11 11 11ZM9 11.5h2v4H9v2h6v-2h-2v-6H9v2ZM13 8V6h-2v2h2Z" fill="currentColor"></path></svg></span>Please use 1.2.4</div><div class="admonitionContent_BuS1"><p>Version 1.2.3 of <code>arrow-core</code> changed the behavior of <code>Raise</code> computations returning
functions or sequences. This change <a href="https://github.com/arrow-kt/arrow/issues/3391" target="_blank" rel="noopener noreferrer">restricted some useful usages</a>,
so the team has decided to roll it back and keep the 1.2.1 behavior.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-features">New features<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#new-features" class="hash-link" aria-label="Direct link to New features" title="Direct link to New features">​</a></h2>
<p>A version number like 1.2.3 sounds like a small bugfix release, but this is far from truth in
this case: this release is full of new modules to help you be productive when writing Kotlin.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="improved-focus-on-compose">Improved focus on Compose<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#improved-focus-on-compose" class="hash-link" aria-label="Direct link to Improved focus on Compose" title="Direct link to Improved focus on Compose">​</a></h3>
<p>Arrow provides building blocks relevant to many projects using Kotlin.
A large part of our community is doing frontend work, and during the latest months,
the team has been trying to understand their needs, in order to make Arrow
a relevant tool in that space.</p>
<p>From that journey, we have put together a new documentation page highlighting
different ways in which Arrow may be useful in your Compose application.
There is also a new <a href="https://arrow-kt.io/learn/immutable-data/lens/#integration-with-compose"><code>arrow-optics-compose</code> module</a>
that includes utilities to work with immutable data inside a <code>MutableState</code>
or <code>MutableStateFlow</code>.</p>
<p>We are eager to hear more use cases or needs where Arrow may help the lives
of Kotlin developers. Feel free to drop by the <code>#arrow</code> channel in the Kotlin Slack,
or open an issue or discussion in our <a href="https://github.com/arrow-kt/arrow" target="_blank" rel="noopener noreferrer">repository</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="non-suspend-resource-management">Non-<code>suspend</code> resource management<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#non-suspend-resource-management" class="hash-link" aria-label="Direct link to non-suspend-resource-management" title="Direct link to non-suspend-resource-management">​</a></h3>
<p><a href="https://arrow-kt.io/learn/coroutines/resource-safety/">Resource safety</a> in Arrow
has been traditionally tied to the use of coroutines and <code>suspend</code> functions.
This is the right choice for Kotlin-first libraries, like Ktor or Koin, but many
libraries still come from a Java background where no such feature exists.
Beginning with this version, we provide two "variations" of resource management:</p>
<ul>
<li><code>Resource</code>, from the <code>arrow-fx-coroutines</code> module, is based on <code>suspend</code>
and ensures the desired behavior alongside coroutines (including cancellation).</li>
<li><code>AutoClose</code>, from the new <code>arrow-autoclose</code> module, provides almost the
same API as <code>Resource</code>, but without the <code>suspend</code> requirement.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="forward-compatible-eval">Forward compatible <code>Eval</code><a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#forward-compatible-eval" class="hash-link" aria-label="Direct link to forward-compatible-eval" title="Direct link to forward-compatible-eval">​</a></h3>
<p>One of our goals is to make the transition to 2.0 as smooth as possible.
You can <a href="https://arrow-kt.io/learn/quickstart/migration/">already migrate</a>
to the new APIs by using Arrow 1.2.3, and then ensuring that you get no deprecation warnings.</p>
<p>During this process, we were <a href="https://github.com/arrow-kt/arrow/issues/3039" target="_blank" rel="noopener noreferrer">made aware</a> that
there was no clear story for the migration of <code>Eval</code>. On the other hand, the use cases are very narrow.
The decision was to create a new <a href="https://arrow-kt.io/learn/collections-functions/eval/"><code>arrow-eval</code> module</a>,
present since this release, and mark the one from <code>arrow-core</code> point the new module,
instead of entirely removing this functionality from Arrow.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="collectors">Collectors<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#collectors" class="hash-link" aria-label="Direct link to Collectors" title="Direct link to Collectors">​</a></h3>
<p>The new <a href="https://arrow-kt.io/learn/collections-functions/collectors/"><code>arrow-collectors</code> module</a>
allows composing operations over sequences of values
(lists, flows, sequences) while ensuring that the sequence is traversed only once.
This property is especially relevant when building the sequence is expensive, or simply
cannot be reproduced, like a stream of data from a database or a flow of actions.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="improved-features">Improved features<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#improved-features" class="hash-link" aria-label="Direct link to Improved features" title="Direct link to Improved features">​</a></h2>
<p>Several features in the library have been improved, to ensure that Arrow covers a variety
of use cases.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="lenses-for-sealed-classes">Lenses for sealed classes<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#lenses-for-sealed-classes" class="hash-link" aria-label="Direct link to Lenses for sealed classes" title="Direct link to Lenses for sealed classes">​</a></h3>
<p>This was once of the <a href="https://github.com/arrow-kt/arrow/issues/2829" target="_blank" rel="noopener noreferrer">older feature requests</a>
still in our issue tracker, which is now closed thanks to a wonderful
<a href="https://github.com/arrow-kt/arrow/pull/3359" target="_blank" rel="noopener noreferrer">contribution</a>!</p>
<p>From now on, the Optics KSP plug-in can generate
<a href="https://arrow-kt.io/learn/immutable-data/lens/#sealed-class-hierarchies">lenses for sealed hierarchies</a>,
given that the field lives in the common parent. For example, the following code</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#222E51"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#D4D4D4;background-color:#222E51"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#D4D4D4"><span class="token label symbol" style="color:#c57a17">@optics</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">sealed</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">interface</span><span class="token plain"> User </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token keyword" style="color:#82a2f3">val</span><span class="token plain"> name</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> String</span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token keyword" style="color:#82a2f3">data</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">class</span><span class="token plain"> </span><span class="token function" style="color:#EDB368">Person</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:#82a2f3">override</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">val</span><span class="token plain"> name</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">val</span><span class="token plain"> age</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> User</span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token keyword" style="color:#82a2f3">data</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">class</span><span class="token plain"> </span><span class="token function" style="color:#EDB368">Company</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:#82a2f3">override</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">val</span><span class="token plain"> name</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> String</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:#82a2f3">val</span><span class="token plain"> vat</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> VATNumber</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> User</span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>generates from this version on both prisms for each choice, and a lens for <code>name</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="higher-arity-functions">Higher-arity functions<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#higher-arity-functions" class="hash-link" aria-label="Direct link to Higher-arity functions" title="Direct link to Higher-arity functions">​</a></h3>
<p>We have traditionally been reluctant to add variations of <code>zip</code> with more than
10 parameters, because we felt that the narrow use cases did not balance out
the increase in binary size. Since this release Arrow provides those functions
in a new <code>arrow-core-high-arity</code> module.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-accumulating-functions-for-raise">More accumulating functions for <code>Raise</code><a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#more-accumulating-functions-for-raise" class="hash-link" aria-label="Direct link to more-accumulating-functions-for-raise" title="Direct link to more-accumulating-functions-for-raise">​</a></h3>
<p><a href="https://arrow-kt.io/learn/typed-errors/working-with-typed-errors/">Typed errors</a>
provide two essential ways to <a href="https://arrow-kt.io/learn/typed-errors/working-with-typed-errors/#accumulating-errors">accumulate errors</a>: <code>zipOrAccumulate</code> and <code>mapOrAccumulate</code>. Those correspond
to accumulating over a fixed number of computations of different types, or
accumulating over an unknown quantity of computations with the same type.</p>
<p>The <code>mapOrAccumulate</code> function <em>always</em> returns a new list. In some cases, you
don't really care about this result, just about the iteration behavior.
This is similar to the different between <code>map</code> and <code>forEach</code> in the standard
library. From there Arrow takes the name of the new function: <code>forEachAccumulating</code>.</p>
<p>One potential use case is performing validation over elements of a list,
but keeping the values intact.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#D4D4D4;--prism-background-color:#222E51"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#D4D4D4;background-color:#222E51"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#D4D4D4"><span class="token plain">people</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:#EDB368">forEachAccumulating</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> person </span><span class="token operator" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain">  </span><span class="token function" style="color:#EDB368">ensure</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">person</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">age </span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#cfcd9a">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> </span><span class="token function" style="color:#EDB368">InvalidAge</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">person</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#D4D4D4"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="better-memoization">Better memoization<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#better-memoization" class="hash-link" aria-label="Direct link to Better memoization" title="Direct link to Better memoization">​</a></h3>
<p><a href="https://arrow-kt.io/learn/collections-functions/recursive/#memoized-recursive-functions"><code>MemoizedDeepRecursiveFunction</code></a>
is a powerful tool to express recursive algorithms without worries over stack overflow or recomputation.
However, there was a lack of control over how memoized values were stored or evicted, which made the
type less useful than intended.</p>
<p>From this release on, there are new overloads to support custom memoization policies.
Furthermore, the new <a href="https://arrow-kt.io/learn/collections-functions/recursive/#memoization-takes-memory"><code>arrow-cache4k</code> module</a>
provides integration with the excellent
<a href="https://github.com/ReactiveCircus/cache4k" target="_blank" rel="noopener noreferrer">cache4k</a> library.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-integrations">More integrations<a href="https://arrow-kt.io/community/blog/2024/02/28/arrow-1-2-3#more-integrations" class="hash-link" aria-label="Direct link to More integrations" title="Direct link to More integrations">​</a></h2>
<p>Although not part of this release, we would like to highlight that
<a href="https://akkurate.dev/" target="_blank" rel="noopener noreferrer">Akkurate</a>, which provides a wonderful DSL for validation over data,
has released an <a href="https://akkurate.dev/docs/arrow-integration.html" target="_blank" rel="noopener noreferrer">integration module for Arrow</a>.
This adds to the <a href="https://arrow-kt.io/learn/integrations/">rest of integrations</a>
and shows the collaborative spirit of the Kotlin community.</p>]]></content:encoded>
            <category>core</category>
            <category>articles</category>
        </item>
        <item>
            <title><![CDATA[Arrow releases stable 1.2.0 version]]></title>
            <link>https://arrow-kt.io/community/blog/2023/07/12/arrow-1-2-0</link>
            <guid>https://arrow-kt.io/community/blog/2023/07/12/arrow-1-2-0</guid>
            <pubDate>Wed, 12 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We're excited to announce the stable Arrow 1.2.0 version. To briefly summarize, this release:]]></description>
            <content:encoded><![CDATA[<p>We're excited to announce the stable Arrow 1.2.0 version. To briefly summarize, this release:</p>
<ul>
<li>Improves the API for <a href="http://arrow-kt.io/learn/typed-errors/working-with-typed-errors/" target="_blank" rel="noopener noreferrer">typed errors</a>,
including <a href="https://apidocs.arrow-kt.io/arrow-core/arrow.core.raise/with-error.html" target="_blank" rel="noopener noreferrer"><code>withError</code></a>
and <a href="https://apidocs.arrow-kt.io/arrow-core/arrow.core.raise/merge.html" target="_blank" rel="noopener noreferrer"><code>merge</code></a>.</li>
<li>Adds <a href="https://apidocs.arrow-kt.io/arrow-core/arrow.core/-non-empty-collection/index.html" target="_blank" rel="noopener noreferrer"><code>NonEmptyCollection</code></a>
as common parent of <a href="https://apidocs.arrow-kt.io/arrow-core/arrow.core/-non-empty-list/index.html" target="_blank" rel="noopener noreferrer"><code>NonEmptyList</code></a>
and <a href="https://apidocs.arrow-kt.io/arrow-core/arrow.core/-non-empty-set/index.html" target="_blank" rel="noopener noreferrer"><code>NonEmptySet</code></a>.</li>
<li>Introduces <a href="https://arrow-kt.io/learn/quickstart/serialization/" target="_blank" rel="noopener noreferrer"><code>arrow-core-serialization</code></a>
to be used alongside KotlinX Serialization.</li>
<li>Fixes a few issues found in the Release Candidate.</li>
</ul>
<p>Read more details in the full <a href="https://xebia.com/blog/a-new-module-for-typed-errors-in-arrow-1-2-0/" target="_blank" rel="noopener noreferrer">Arrow 1.2.0 release announcement</a>.</p>]]></content:encoded>
            <category>core</category>
            <category>articles</category>
        </item>
        <item>
            <title><![CDATA[Arrow 2.0's Trajectory - Video]]></title>
            <link>https://arrow-kt.io/community/blog/2023/05/04/arrow-trajectory-kotlinconf</link>
            <guid>https://arrow-kt.io/community/blog/2023/05/04/arrow-trajectory-kotlinconf</guid>
            <pubDate>Thu, 04 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Watch Simon Vergauwen's presentation from KotlinConf 2023 about the history of Arrow, and the trajectory for Arrow 2.0.]]></description>
            <content:encoded><![CDATA[<p>Watch <a href="https://twitter.com/vergauwen_simon" target="_blank" rel="noopener noreferrer">Simon Vergauwen</a>'s presentation from KotlinConf 2023 about the history of Arrow, and the trajectory for Arrow 2.0.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Nicer data transformation with KopyKat and Optics]]></title>
            <link>https://arrow-kt.io/community/blog/2023/05/04/data-transformation-kotlinconf</link>
            <guid>https://arrow-kt.io/community/blog/2023/05/04/data-transformation-kotlinconf</guid>
            <pubDate>Thu, 04 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Watch Alejandro Serrano's presentation from KotlinConf 2023 about data transformation.]]></description>
            <content:encoded><![CDATA[<p>Watch <a href="https://twitter.com/trupill" target="_blank" rel="noopener noreferrer">Alejandro Serrano</a>'s presentation from KotlinConf 2023 about data transformation.</p>
<p>Data classes are incredibly useful when modeling our domain in an immutable way. The Kotlin compiler gives us many niceties, including 'copy' to create a new value based on a previous one. However, this 'copy' often falls short. This talk explores two alternatives: KopyKat, a plug-in to generate additional variations of 'copy', and Arrow Optics, a whole framework to transform this immutable data.</p>]]></content:encoded>
            <category>optics</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Typed Error Handling in Kotlin]]></title>
            <link>https://arrow-kt.io/community/blog/2023/04/17/typed-error-handling-in-kotlin</link>
            <guid>https://arrow-kt.io/community/blog/2023/04/17/typed-error-handling-in-kotlin</guid>
            <pubDate>Mon, 17 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A comparative study about several typed-error handling practices in Kotlin.]]></description>
            <content:encoded><![CDATA[<p>A comparative study about several typed-error handling practices in Kotlin.</p>
<p>There are various approaches to error handling in the Kotlin community.
In this article we’ve explored a small subset of typed error handling practices in the community.</p>
<p>From the approaches explored, there were three patterns that aligns with Kotlin recommendation with
relatively low cognitive complexity including: Sealed class matching with early returns, Arrow's <code>either { }</code> builder,
and Arrow's <code>context(Raise&lt;E&gt;)</code> with context-receivers.</p>
<p>Arrow's <code>context(Raise&lt;E&gt;)</code> achieved the most optimized score on all aspects of
developer productivity. This includes having the lowest cognitive complexity, the lowest cyclomatic complexity
as well as the most succinct with the least lines of codes.</p>
<p>Read the full article: <a href="https://medium.com/@mitchellyuwono/typed-error-handling-in-kotlin-11ff25882880" target="_blank" rel="noopener noreferrer">Typed Error Handling in Kotlin</a>.</p>]]></content:encoded>
            <category>core</category>
            <category>articles</category>
        </item>
        <item>
            <title><![CDATA[Arrow 2.0's Trajectory]]></title>
            <link>https://arrow-kt.io/community/blog/2023/04/16/arrow-2-0-trajectory</link>
            <guid>https://arrow-kt.io/community/blog/2023/04/16/arrow-2-0-trajectory</guid>
            <pubDate>Sun, 16 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[A full transcript and the slides from Simon Vergauwen's presentation from KotlinConf 2023 about the history of Arrow and where it's going.]]></description>
            <content:encoded><![CDATA[<p>A full transcript and the slides from <a href="https://twitter.com/vergauwen_simon" target="_blank" rel="noopener noreferrer">Simon Vergauwen's</a> presentation from KotlinConf 2023 about the history of Arrow and where it's going.</p>]]></content:encoded>
            <category>core</category>
            <category>slidedecks</category>
        </item>
        <item>
            <title><![CDATA[Arrow 1.2.0-RC Release Summary]]></title>
            <link>https://arrow-kt.io/community/blog/2023/04/04/arrow-1-2-0-rc-summary</link>
            <guid>https://arrow-kt.io/community/blog/2023/04/04/arrow-1-2-0-rc-summary</guid>
            <pubDate>Tue, 04 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We're excited to announce Arrow 1.2.0-RC alongside a new Arrow website. To briefly summarize, this release:]]></description>
            <content:encoded><![CDATA[<p>We're excited to announce Arrow 1.2.0-RC alongside a new Arrow website. To briefly summarize, this release:</p>
<ul>
<li>Introduces a brand new <a href="http://arrow-kt.io/learn/typed-errors/working-with-typed-errors/" target="_blank" rel="noopener noreferrer">typed errors</a> module.</li>
<li>Adds more options for <a href="http://arrow-kt.io/learn/resilience/" target="_blank" rel="noopener noreferrer">resilience</a>.</li>
<li>Marks every function and type we intend to remove in 2.0 as <code>@Deprecated</code>.</li>
</ul>
<p>Read more details in the full <a href="https://xebia.com/blog/arrow-1-2-0-rc-is-now-available/" target="_blank" rel="noopener noreferrer">Arrow 1.2.0 release announcement</a>.</p>]]></content:encoded>
            <category>core</category>
            <category>articles</category>
        </item>
        <item>
            <title><![CDATA[Functional Fun in Kotlin]]></title>
            <link>https://arrow-kt.io/community/blog/2023/02/04/functional-fun-kotlin</link>
            <guid>https://arrow-kt.io/community/blog/2023/02/04/functional-fun-kotlin</guid>
            <pubDate>Sat, 04 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Simon Vergauwen shares why he thinks Kotlin is great language to do modern functional programming, and why he believes it's perhaps the best language to do modern mainstream (hardcore) functional programming.]]></description>
            <content:encoded><![CDATA[<p><a href="https://twitter.com/vergauwen_simon" target="_blank" rel="noopener noreferrer">Simon Vergauwen</a> shares why he thinks Kotlin is great language to do modern functional programming, and why he believes it's perhaps the best language to do modern mainstream (hardcore) functional programming.</p>]]></content:encoded>
            <category>core</category>
            <category>slidedecks</category>
        </item>
        <item>
            <title><![CDATA[CodelyTV Interview with Raul Raja]]></title>
            <link>https://arrow-kt.io/community/blog/2023/01/03/codelytv-interview</link>
            <guid>https://arrow-kt.io/community/blog/2023/01/03/codelytv-interview</guid>
            <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[An interview with Arrow maintainer Raúl Raja by Rafa Gómez on CodelyTV.]]></description>
            <content:encoded><![CDATA[<p>An interview with Arrow maintainer Raúl Raja by Rafa Gómez on CodelyTV.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Actions as Data]]></title>
            <link>https://arrow-kt.io/community/blog/2022/12/01/actions-as-data</link>
            <guid>https://arrow-kt.io/community/blog/2022/12/01/actions-as-data</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A presentation by Alejandro Serrano at Advanced Kotlin Dev Day 2022.]]></description>
            <content:encoded><![CDATA[<p>A presentation by Alejandro Serrano at Advanced Kotlin Dev Day 2022.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Context Receivers: Kotlin's new secret sauce]]></title>
            <link>https://arrow-kt.io/community/blog/2022/12/01/context-receivers</link>
            <guid>https://arrow-kt.io/community/blog/2022/12/01/context-receivers</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Alejandro Serrano's presentation from Advanced Kotlin Dev Day 2022 about context receivers.]]></description>
            <content:encoded><![CDATA[<p>Alejandro Serrano's presentation from Advanced Kotlin Dev Day 2022 about context receivers.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Functional Error Handling - A Practical Approach]]></title>
            <link>https://arrow-kt.io/community/blog/2022/12/01/functional-error-handling</link>
            <guid>https://arrow-kt.io/community/blog/2022/12/01/functional-error-handling</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A presentation by Bas de Groot at Advanced Kotlin Dev Day 2022.]]></description>
            <content:encoded><![CDATA[<p>A presentation by Bas de Groot at Advanced Kotlin Dev Day 2022.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Functional Flowing]]></title>
            <link>https://arrow-kt.io/community/blog/2022/12/01/functional-flowing</link>
            <guid>https://arrow-kt.io/community/blog/2022/12/01/functional-flowing</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way.]]></description>
            <content:encoded><![CDATA[<p>Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Graceful Shutdown with Structured Concurrency]]></title>
            <link>https://arrow-kt.io/community/blog/2022/12/01/graceful-shutdown-structured-concurrency</link>
            <guid>https://arrow-kt.io/community/blog/2022/12/01/graceful-shutdown-structured-concurrency</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A presentation by Simon Vergauwen at Advanced Kotlin Dev Day 2022.]]></description>
            <content:encoded><![CDATA[<p>A presentation by Simon Vergauwen at Advanced Kotlin Dev Day 2022.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Functional Programming in Kotlin: Exploring Arrow]]></title>
            <link>https://arrow-kt.io/community/blog/2022/07/01/exploring-arrow</link>
            <guid>https://arrow-kt.io/community/blog/2022/07/01/exploring-arrow</guid>
            <pubDate>Fri, 01 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A presentation by Ties van de Veen at Voxxed Days Luxembourg 2022.]]></description>
            <content:encoded><![CDATA[<p>A presentation by Ties van de Veen at Voxxed Days Luxembourg 2022.</p>]]></content:encoded>
            <category>core</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Turbocharging Kotlin: Arrow Analysis, Optics, and Meta]]></title>
            <link>https://arrow-kt.io/community/blog/2022/06/28/turbocharging-kotlin-talking-kotlin</link>
            <guid>https://arrow-kt.io/community/blog/2022/06/28/turbocharging-kotlin-talking-kotlin</guid>
            <pubDate>Tue, 28 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Raul Raja, Simon Vergauwen, and Alejandro Serrano appeared on Talking Kotlin to chat about Arrow.]]></description>
            <content:encoded><![CDATA[<p>Raul Raja, Simon Vergauwen, and Alejandro Serrano appeared on Talking Kotlin to chat about Arrow.</p>]]></content:encoded>
            <category>core</category>
            <category>meta</category>
            <category>optics</category>
            <category>analysis</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Arrow put on a big show at Kotlin Dev Day]]></title>
            <link>https://arrow-kt.io/community/blog/2022/06/14/arrow-kotlin-dev-day</link>
            <guid>https://arrow-kt.io/community/blog/2022/06/14/arrow-kotlin-dev-day</guid>
            <pubDate>Tue, 14 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A recap of the attention Arrow received at Kotlin Dev Day.]]></description>
            <content:encoded><![CDATA[<p>A recap of the attention Arrow received at Kotlin Dev Day.</p>]]></content:encoded>
            <category>core</category>
            <category>fx</category>
            <category>articles</category>
        </item>
        <item>
            <title><![CDATA[Building applications with Kotlin and Arrow.kt in style]]></title>
            <link>https://arrow-kt.io/community/blog/2022/05/31/building-applications-with-kotlin-and-arrow-kt-in-style</link>
            <guid>https://arrow-kt.io/community/blog/2022/05/31/building-applications-with-kotlin-and-arrow-kt-in-style</guid>
            <pubDate>Tue, 31 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[A presentation by Simon Vergauwen presented on the official Kotlin YouTube channel.]]></description>
            <content:encoded><![CDATA[<p>A presentation by Simon Vergauwen presented on the official Kotlin YouTube channel.</p>]]></content:encoded>
            <category>core</category>
            <category>fx</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Extending kotlinx.serialization functionality with Arrow Meta with Karin-Aleksandra Monoid]]></title>
            <link>https://arrow-kt.io/community/blog/2022/05/30/extending-kotlinx-serialization-functionality-arrow-meta</link>
            <guid>https://arrow-kt.io/community/blog/2022/05/30/extending-kotlinx-serialization-functionality-arrow-meta</guid>
            <pubDate>Mon, 30 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Karin-Aleksandra Monoid provides an overview of Arrow Meta features.]]></description>
            <content:encoded><![CDATA[<p>Karin-Aleksandra Monoid provides an overview of Arrow Meta features.</p>]]></content:encoded>
            <category>meta</category>
            <category>videos</category>
        </item>
        <item>
            <title><![CDATA[Super-charge your build with Arrow Analysis by Alejandro Serrano Mena]]></title>
            <link>https://arrow-kt.io/community/blog/2022/05/30/super-charge-build-arrow-analysis</link>
            <guid>https://arrow-kt.io/community/blog/2022/05/30/super-charge-build-arrow-analysis</guid>
            <pubDate>Mon, 30 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time.]]></description>
            <content:encoded><![CDATA[<p>Alejandro Serrano presents Arrow Analysis, a Kotlin compiler plug-in that does pre-and post-condition and type invariant checking at compile time.</p>]]></content:encoded>
            <category>analysis</category>
            <category>videos</category>
        </item>
    </channel>
</rss>