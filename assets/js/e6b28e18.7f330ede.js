"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[7566],{85369:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=a(85893),n=a(11151);const r={title:"Arrow Meta - Enabling Functional Programming in the Kotlin Compiler",image:"https://img.youtube.com/vi/WKR384ZeBgk/maxresdefault.jpg",category:"videos",tags:["meta","videos"],link:"https://www.youtube.com/watch?v=WKR384ZeBgk",event:"Lambda World, C\xe1diz, Spain"},i=void 0,l={permalink:"/community/blog/2019/10/18/lambda-world-arrow-meta",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2019-10-18-lambda-world-arrow-meta.md",source:"@site/content/blog/2019-10-18-lambda-world-arrow-meta.md",title:"Arrow Meta - Enabling Functional Programming in the Kotlin Compiler",description:"Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation.",date:"2019-10-18T00:00:00.000Z",tags:[{label:"meta",permalink:"/community/blog/tags/meta"},{label:"videos",permalink:"/community/blog/tags/videos"}],readingTime:.22,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Arrow Meta - Enabling Functional Programming in the Kotlin Compiler",image:"https://img.youtube.com/vi/WKR384ZeBgk/maxresdefault.jpg",category:"videos",tags:["meta","videos"],link:"https://www.youtube.com/watch?v=WKR384ZeBgk",event:"Lambda World, C\xe1diz, Spain"},unlisted:!1,prevItem:{title:"Arrow Fx & Arrow Meta - Functional Programming for the masses",permalink:"/community/blog/2019/11/27/functional-jvm-arrow-fx-meta"},nextItem:{title:"Kotlin and Arrow: the functional way",permalink:"/community/blog/2019/08/08/kotlin-and-arrow-the-functional-way"}},m={authorsImageUrls:[]},s=[];function c(t){const e={p:"p",...(0,n.a)(),...t.components};return(0,o.jsx)(e.p,{children:"Arrow Meta is a library that empowers library and application authors with the ability to write plugins for the Kotlin compiler. Compiler plugins have access to all compiler phases and can intercept and modify the AST, descriptors, and IR intermediate lang for bytecode generation."})}function p(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(c,{...t})}):c(t)}},11151:(t,e,a)=>{a.d(e,{Z:()=>l,a:()=>i});var o=a(67294);const n={},r=o.createContext(n);function i(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:i(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);