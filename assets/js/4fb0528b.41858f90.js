"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[165],{29923:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var o=n(85893),s=n(11151);const t={title:"Arrow 1.2.3 release",category:"articles",tags:["core","articles"]},i="Arrow 1.2.3 release",a={permalink:"/community/blog/2024/02/28/arrow-1-2-3",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2024-02-28-arrow-1-2-3.md",source:"@site/content/blog/2024-02-28-arrow-1-2-3.md",title:"Arrow 1.2.3 release",description:"We are happy to announce the availability of version 1.2.3 of the Arrow collection of libraries.",date:"2024-02-28T00:00:00.000Z",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:4.65,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Arrow 1.2.3 release",category:"articles",tags:["core","articles"]},unlisted:!1,prevItem:{title:"Arrow plug-in for IntelliJ 0.1 is here!",permalink:"/community/blog/2024/06/01/intellij-plugin"},nextItem:{title:"Arrow releases stable 1.2.0 version",permalink:"/community/blog/2023/07/12/arrow-1-2-0"}},l={authorsImageUrls:[]},c=[{value:"New features",id:"new-features",level:2},{value:"Improved focus on Compose",id:"improved-focus-on-compose",level:3},{value:"Non-<code>suspend</code> resource management",id:"non-suspend-resource-management",level:3},{value:"Forward compatible <code>Eval</code>",id:"forward-compatible-eval",level:3},{value:"Collectors",id:"collectors",level:3},{value:"Improved features",id:"improved-features",level:2},{value:"Lenses for sealed classes",id:"lenses-for-sealed-classes",level:3},{value:"Higher-arity functions",id:"higher-arity-functions",level:3},{value:"More accumulating functions for <code>Raise</code>",id:"more-accumulating-functions-for-raise",level:3},{value:"Better memoization",id:"better-memoization",level:3},{value:"More integrations",id:"more-integrations",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.p,{children:["We are happy to announce the availability of version 1.2.3 of the Arrow collection of libraries.\nAccording to our plan, this is the last non-bugfix release of the 1.x series.\nFrom now on, our ",(0,o.jsx)(r.code,{children:"main"})," branch targets Arrow 2.0, which should be the next major release."]}),"\n",(0,o.jsx)(r.p,{children:"We are incredibly thankful to the many people that have contributed to this release,\nbringing new ideas and quite some code."}),"\n",(0,o.jsx)(r.admonition,{title:"Please use 1.2.4",type:"info",children:(0,o.jsxs)(r.p,{children:["Version 1.2.3 of ",(0,o.jsx)(r.code,{children:"arrow-core"})," changed the behavior of ",(0,o.jsx)(r.code,{children:"Raise"})," computations returning\nfunctions or sequences. This change ",(0,o.jsx)(r.a,{href:"https://github.com/arrow-kt/arrow/issues/3391",children:"restricted some useful usages"}),",\nso the team has decided to roll it back and keep the 1.2.1 behavior."]})}),"\n",(0,o.jsx)(r.h2,{id:"new-features",children:"New features"}),"\n",(0,o.jsx)(r.p,{children:"A version number like 1.2.3 sounds like a small bugfix release, but this is far from truth in\nthis case: this release is full of new modules to help you be productive when writing Kotlin."}),"\n",(0,o.jsx)(r.h3,{id:"improved-focus-on-compose",children:"Improved focus on Compose"}),"\n",(0,o.jsx)(r.p,{children:"Arrow provides building blocks relevant to many projects using Kotlin.\nA large part of our community is doing frontend work, and during the latest months,\nthe team has been trying to understand their needs, in order to make Arrow\na relevant tool in that space."}),"\n",(0,o.jsxs)(r.p,{children:["From that journey, we have put together a new documentation page highlighting\ndifferent ways in which Arrow may be useful in your Compose application.\nThere is also a new ",(0,o.jsxs)(r.a,{href:"/learn/immutable-data/lens/#integration-with-compose",children:[(0,o.jsx)(r.code,{children:"arrow-optics-compose"})," module"]}),"\nthat includes utilities to work with immutable data inside a ",(0,o.jsx)(r.code,{children:"MutableState"}),"\nor ",(0,o.jsx)(r.code,{children:"MutableStateFlow"}),"."]}),"\n",(0,o.jsxs)(r.p,{children:["We are eager to hear more use cases or needs where Arrow may help the lives\nof Kotlin developers. Feel free to drop by the ",(0,o.jsx)(r.code,{children:"#arrow"})," channel in the Kotlin Slack,\nor open an issue or discussion in our ",(0,o.jsx)(r.a,{href:"https://github.com/arrow-kt/arrow",children:"repository"}),"."]}),"\n",(0,o.jsxs)(r.h3,{id:"non-suspend-resource-management",children:["Non-",(0,o.jsx)(r.code,{children:"suspend"})," resource management"]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"/learn/coroutines/resource-safety/",children:"Resource safety"})," in Arrow\nhas been traditionally tied to the use of coroutines and ",(0,o.jsx)(r.code,{children:"suspend"}),' functions.\nThis is the right choice for Kotlin-first libraries, like Ktor or Koin, but many\nlibraries still come from a Java background where no such feature exists.\nBeginning with this version, we provide two "variations" of resource management:']}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"Resource"}),", from the ",(0,o.jsx)(r.code,{children:"arrow-fx-coroutines"})," module, is based on ",(0,o.jsx)(r.code,{children:"suspend"}),"\nand ensures the desired behavior alongside coroutines (including cancellation)."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"AutoClose"}),", from the new ",(0,o.jsx)(r.code,{children:"arrow-autoclose"})," module, provides almost the\nsame API as ",(0,o.jsx)(r.code,{children:"Resource"}),", but without the ",(0,o.jsx)(r.code,{children:"suspend"})," requirement."]}),"\n"]}),"\n",(0,o.jsxs)(r.h3,{id:"forward-compatible-eval",children:["Forward compatible ",(0,o.jsx)(r.code,{children:"Eval"})]}),"\n",(0,o.jsxs)(r.p,{children:["One of our goals is to make the transition to 2.0 as smooth as possible.\nYou can ",(0,o.jsx)(r.a,{href:"/learn/quickstart/migration/",children:"already migrate"}),"\nto the new APIs by using Arrow 1.2.3, and then ensuring that you get no deprecation warnings."]}),"\n",(0,o.jsxs)(r.p,{children:["During this process, we were ",(0,o.jsx)(r.a,{href:"https://github.com/arrow-kt/arrow/issues/3039",children:"made aware"})," that\nthere was no clear story for the migration of ",(0,o.jsx)(r.code,{children:"Eval"}),". On the other hand, the use cases are very narrow.\nThe decision was to create a new ",(0,o.jsxs)(r.a,{href:"/learn/collections-functions/eval/",children:[(0,o.jsx)(r.code,{children:"arrow-eval"})," module"]}),",\npresent since this release, and mark the one from ",(0,o.jsx)(r.code,{children:"arrow-core"})," point the new module,\ninstead of entirely removing this functionality from Arrow."]}),"\n",(0,o.jsx)(r.h3,{id:"collectors",children:"Collectors"}),"\n",(0,o.jsxs)(r.p,{children:["The new ",(0,o.jsxs)(r.a,{href:"/learn/collections-functions/collectors/",children:[(0,o.jsx)(r.code,{children:"arrow-collectors"})," module"]}),"\nallows composing operations over sequences of values\n(lists, flows, sequences) while ensuring that the sequence is traversed only once.\nThis property is especially relevant when building the sequence is expensive, or simply\ncannot be reproduced, like a stream of data from a database or a flow of actions."]}),"\n",(0,o.jsx)(r.h2,{id:"improved-features",children:"Improved features"}),"\n",(0,o.jsx)(r.p,{children:"Several features in the library have been improved, to ensure that Arrow covers a variety\nof use cases."}),"\n",(0,o.jsx)(r.h3,{id:"lenses-for-sealed-classes",children:"Lenses for sealed classes"}),"\n",(0,o.jsxs)(r.p,{children:["This was once of the ",(0,o.jsx)(r.a,{href:"https://github.com/arrow-kt/arrow/issues/2829",children:"older feature requests"}),"\nstill in our issue tracker, which is now closed thanks to a wonderful\n",(0,o.jsx)(r.a,{href:"https://github.com/arrow-kt/arrow/pull/3359",children:"contribution"}),"!"]}),"\n",(0,o.jsxs)(r.p,{children:["From now on, the Optics KSP plug-in can generate\n",(0,o.jsx)(r.a,{href:"/learn/immutable-data/lens/#sealed-class-hierarchies",children:"lenses for sealed hierarchies"}),",\ngiven that the field lives in the common parent. For example, the following code"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-kotlin",children:"@optics sealed interface User {\n  val name: String\n\n  data class Person(override val name: String, val age: Int): User\n  data class Company(override val name: String, val vat: VATNumber): User\n}\n"})}),"\n",(0,o.jsxs)(r.p,{children:["generates from this version on both prisms for each choice, and a lens for ",(0,o.jsx)(r.code,{children:"name"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"higher-arity-functions",children:"Higher-arity functions"}),"\n",(0,o.jsxs)(r.p,{children:["We have traditionally been reluctant to add variations of ",(0,o.jsx)(r.code,{children:"zip"})," with more than\n10 parameters, because we felt that the narrow use cases did not balance out\nthe increase in binary size. Since this release Arrow provides those functions\nin a new ",(0,o.jsx)(r.code,{children:"arrow-core-high-arity"})," module."]}),"\n",(0,o.jsxs)(r.h3,{id:"more-accumulating-functions-for-raise",children:["More accumulating functions for ",(0,o.jsx)(r.code,{children:"Raise"})]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"/learn/typed-errors/working-with-typed-errors/",children:"Typed errors"}),"\nprovide two essential ways to ",(0,o.jsx)(r.a,{href:"/learn/typed-errors/working-with-typed-errors/#accumulating-errors",children:"accumulate errors"}),": ",(0,o.jsx)(r.code,{children:"zipOrAccumulate"})," and ",(0,o.jsx)(r.code,{children:"mapOrAccumulate"}),". Those correspond\nto accumulating over a fixed number of computations of different types, or\naccumulating over an unknown quantity of computations with the same type."]}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"mapOrAccumulate"})," function ",(0,o.jsx)(r.em,{children:"always"})," returns a new list. In some cases, you\ndon't really care about this result, just about the iteration behavior.\nThis is similar to the different between ",(0,o.jsx)(r.code,{children:"map"})," and ",(0,o.jsx)(r.code,{children:"forEach"})," in the standard\nlibrary. From there Arrow takes the name of the new function: ",(0,o.jsx)(r.code,{children:"forEachAccumulating"}),"."]}),"\n",(0,o.jsx)(r.p,{children:"One potential use case is performing validation over elements of a list,\nbut keeping the values intact."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-kotlin",children:"people.forEachAccumulating { person ->\n  ensure(person.age >= 0) { InvalidAge(person.name) }\n}\n"})}),"\n",(0,o.jsx)(r.h3,{id:"better-memoization",children:"Better memoization"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"/learn/collections-functions/recursive/#memoized-recursive-functions",children:(0,o.jsx)(r.code,{children:"MemoizedDeepRecursiveFunction"})}),"\nis a powerful tool to express recursive algorithms without worries over stack overflow or recomputation.\nHowever, there was a lack of control over how memoized values were stored or evicted, which made the\ntype less useful than intended."]}),"\n",(0,o.jsxs)(r.p,{children:["From this release on, there are new overloads to support custom memoization policies.\nFurthermore, the new ",(0,o.jsxs)(r.a,{href:"/learn/collections-functions/recursive/#memoization-takes-memory",children:[(0,o.jsx)(r.code,{children:"arrow-cache4k"})," module"]}),"\nprovides integration with the excellent\n",(0,o.jsx)(r.a,{href:"https://github.com/ReactiveCircus/cache4k",children:"cache4k"})," library."]}),"\n",(0,o.jsx)(r.h2,{id:"more-integrations",children:"More integrations"}),"\n",(0,o.jsxs)(r.p,{children:["Although not part of this release, we would like to highlight that\n",(0,o.jsx)(r.a,{href:"https://akkurate.dev",children:"Akkurate"}),", which provides a wonderful DSL for validation over data,\nhas released an ",(0,o.jsx)(r.a,{href:"https://akkurate.dev/docs/arrow-integration.html",children:"integration module for Arrow"}),".\nThis adds to the ",(0,o.jsx)(r.a,{href:"/learn/integrations/",children:"rest of integrations"}),"\nand shows the collaborative spirit of the Kotlin community."]})]})}function d(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>a,a:()=>i});var o=n(67294);const s={},t=o.createContext(s);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);