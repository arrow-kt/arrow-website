"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[9543],{62285:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=i(85893),r=i(11151);const o={title:"Arrow plug-in for IntelliJ 0.3",category:"articles",image:"/img/arrow-release-ftr.jpg",no_image_on_post:!0,tags:["intellij","articles"]},s="Arrow plug-in for IntelliJ 0.3",l={permalink:"/community/blog/2025/04/22/arrow-intellij-0-3",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2025-04-22-arrow-intellij-0-3.md",source:"@site/content/blog/2025-04-22-arrow-intellij-0-3.md",title:"Arrow plug-in for IntelliJ 0.3",description:"The new version of the Arrow plug-in for IntelliJ (and compatible IDEs) is out! This release fixes some problems in inspections related to Raise, and brings compatibility with 2025.1. The plug-in is compatible with both K1 and K2 mode of the Kotlin plug-in.",date:"2025-04-22T00:00:00.000Z",tags:[{label:"intellij",permalink:"/community/blog/tags/intellij"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.585,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Arrow plug-in for IntelliJ 0.3",category:"articles",image:"/img/arrow-release-ftr.jpg",no_image_on_post:!0,tags:["intellij","articles"]},unlisted:!1,prevItem:{title:"Arrow Optics for Gradle in beta",permalink:"/community/blog/2025/11/01/arrow-optics-gradle"},nextItem:{title:"Arrow 2.1.0",permalink:"/community/blog/2025/04/21/arrow-2-1"}},a={authorsImageUrls:[]},c=[];function d(e){const t={a:"a",code:"code",em:"em",img:"img",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The new version of the ",(0,n.jsx)(t.a,{href:"https://plugins.jetbrains.com/plugin/24550-arrow",children:"Arrow plug-in for IntelliJ"})," (and compatible IDEs) is out! This release fixes some problems in inspections related to ",(0,n.jsx)(t.code,{children:"Raise"}),", and brings ",(0,n.jsx)(t.strong,{children:"compatibility with 2025.1"}),". The plug-in is compatible with ",(0,n.jsx)(t.strong,{children:"both K1 and K2 mode"})," of the Kotlin plug-in."]}),"\n",(0,n.jsxs)(t.p,{children:["This release also brings new ",(0,n.jsx)(t.strong,{children:"gutter icons"}),' inspired by the "suspended function" and "recursive function" icons in the Kotlin plug-in. These gutter icons highlight uses of ',(0,n.jsx)(t.code,{children:"Raise"})," functions, and delayed computations with ",(0,n.jsx)(t.code,{children:"Eval"}),". Our goal is to make a bit more explicit what the surface syntax of Kotlin keeps implicit."]}),"\n",(0,n.jsxs)("center",{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Gutter icon for Raise",src:i(69140).Z+"",width:"534",height:"184"})," ",(0,n.jsx)("br",{})," ",(0,n.jsxs)(t.em,{children:["Gutter icon for ",(0,n.jsx)(t.code,{children:"Raise"})]})]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"Gutter icons for Eval",src:i(3171).Z+"",width:"554",height:"108"})," ",(0,n.jsx)("br",{})," ",(0,n.jsxs)(t.em,{children:["Gutter icons for ",(0,n.jsx)(t.code,{children:"Eval.later"})," and ",(0,n.jsx)(t.code,{children:"Eval.always"})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3171:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/gutter-eval-ab4e8b50ef7995dfe1617b870877a800.png"},69140:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/gutter-raise-c4e2e9c3f2c7fd82e9e1bebdbbe87ca5.png"},11151:(e,t,i)=>{i.d(t,{Z:()=>l,a:()=>s});var n=i(67294);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);