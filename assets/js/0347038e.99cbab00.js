"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[5621],{91309:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=e(85893),i=e(11151);const r={title:"Functional Programming in Kotlin with Arrow by Emmanuel Nhan",image:"https://image.slidesharecdn.com/fpkotlinsunnytech-180628144002/95/functional-programming-in-kotlin-with-arrow-sunnytech-2018-1-638.jpg",category:"slidedecks",tags:["core","slidedecks"],link:"https://www.slideshare.net/EmmanuelNhan/functional-programming-in-kotlin-with-arrow-sunnytech-2018",event:"Sunny Tech, Montpellier"},a=void 0,s={permalink:"/community/blog/2018/06/27/fp-kotlin-arrow",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2018-06-27-fp-kotlin-arrow.md",source:"@site/content/blog/2018-06-27-fp-kotlin-arrow.md",title:"Functional Programming in Kotlin with Arrow by Emmanuel Nhan",description:"@nhanmanu introduces Kotlin and how it is a good fit for functional programming. The talk goes through some interesting features of Kotlin, then show how to use them to enter the world of Higher Kinds and Typeclasses. In the last part, we explore some Arrow capabilities & built-in syntax, using validation as an example.",date:"2018-06-27T00:00:00.000Z",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"slidedecks",permalink:"/community/blog/tags/slidedecks"}],readingTime:.27,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Functional Programming in Kotlin with Arrow by Emmanuel Nhan",image:"https://image.slidesharecdn.com/fpkotlinsunnytech-180628144002/95/functional-programming-in-kotlin-with-arrow-sunnytech-2018-1-638.jpg",category:"slidedecks",tags:["core","slidedecks"],link:"https://www.slideshare.net/EmmanuelNhan/functional-programming-in-kotlin-with-arrow-sunnytech-2018",event:"Sunny Tech, Montpellier"},unlisted:!1,prevItem:{title:"Arrow and Functional Programming for Kotlin Developers",permalink:"/community/blog/2018/07/24/arrow-fp-kotlin"},nextItem:{title:"Arrow 101\u200a - \u200aBuilding an Android app using Functional Programming",permalink:"/community/blog/2018/06/24/arrow-101"}},l={authorsImageUrls:[]},c=[];function m(n){const t={a:"a",p:"p",...(0,i.a)(),...n.components};return(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://twitter.com/nhanmanu",children:"@nhanmanu"})," introduces Kotlin and how it is a good fit for functional programming. The talk goes through some interesting features of Kotlin, then show how to use them to enter the world of Higher Kinds and Typeclasses. In the last part, we explore some Arrow capabilities & built-in syntax, using validation as an example."]})}function u(n={}){const{wrapper:t}={...(0,i.a)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>s,a:()=>a});var o=e(67294);const i={},r=o.createContext(i);function a(n){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(r.Provider,{value:t},n.children)}}}]);