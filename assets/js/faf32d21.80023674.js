"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[8742],{95162:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=r(85893),n=r(11151);const a={title:"Introducing Arrow Playground",image:"https://www.47deg.com/assets/img/blog/featured_images/2019-04-11-introducing-arrow-playground.png",category:"articles",tags:["core","articles"],link:"https://www.47deg.com/blog/arrow-playground/"},i=void 0,l={permalink:"/community/blog/2019/04/11/introducing-arrow-playground",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2019-04-11-introducing-arrow-playground.md",source:"@site/content/blog/2019-04-11-introducing-arrow-playground.md",title:"Introducing Arrow Playground",description:"Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team.",date:"2019-04-11T00:00:00.000Z",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.175,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Introducing Arrow Playground",image:"https://www.47deg.com/assets/img/blog/featured_images/2019-04-11-introducing-arrow-playground.png",category:"articles",tags:["core","articles"],link:"https://www.47deg.com/blog/arrow-playground/"},unlisted:!1,prevItem:{title:"How KEEP-87 & Typeclasses will change the way we write Kotlin",permalink:"/community/blog/2019/06/04/keep-87-and-typeclasses"},nextItem:{title:"Immutable Conversations - Past and Future of Arrow",permalink:"/community/blog/2019/03/12/immutable-conv-1"}},s={authorsImageUrls:[]},c=[];function u(t){const e={p:"p",...(0,n.a)(),...t.components};return(0,o.jsx)(e.p,{children:"Arrow Playground is a JavaScript library that creates Kotlin-aware, including Arrow, editors capable of running code from HTML block elements. This is a fork of the original Kotlin Playground work done by the JetBrains team."})}function g(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},11151:(t,e,r)=>{r.d(e,{Z:()=>l,a:()=>i});var o=r(67294);const n={},a=o.createContext(n);function i(t){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:i(t.components),o.createElement(a.Provider,{value:e},t.children)}}}]);