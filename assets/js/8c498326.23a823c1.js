"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[6637],{6607:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(85893),t=r(11151);const o={id:"serialization",title:"Serialization",description:"How to (de)serialize Arrow Core types.",sidebar_position:3},a="Serialization",s={id:"learn/quickstart/serialization",title:"Serialization",description:"How to (de)serialize Arrow Core types.",source:"@site/content/docs/learn/quickstart/serialization.md",sourceDirName:"learn/quickstart",slug:"/learn/quickstart/serialization",permalink:"/learn/quickstart/serialization",draft:!1,unlisted:!1,editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/docs/learn/quickstart/serialization.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"serialization",title:"Serialization",description:"How to (de)serialize Arrow Core types.",sidebar_position:3},sidebar:"learnSidebar",previous:{title:"From other FP languages",permalink:"/learn/quickstart/from-fp"},next:{title:"Compose and UIs",permalink:"/learn/quickstart/compose"}},l={},c=[{value:"kotlinx.serialization",id:"kotlinxserialization",level:2},{value:"Jackson",id:"jackson",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"serialization",children:"Serialization"}),"\n",(0,n.jsxs)(i.p,{children:["Arrow Core types, such as ",(0,n.jsx)(i.code,{children:"Either"})," or ",(0,n.jsx)(i.code,{children:"NonEmptyList"}),", often appear as part\nof serializable types. We've decided to keep the Core library as slim as\npossible; in particular we didn't want to depend on particular serialization\nlibraries. As a result, you need a bit of additional ceremony compared to\nusing built-in types, which we discuss in this section."]}),"\n",(0,n.jsx)(i.h2,{id:"kotlinxserialization",children:(0,n.jsx)(i.a,{href:"https://github.com/Kotlin/kotlinx.serialization",children:"kotlinx.serialization"})}),"\n",(0,n.jsxs)(i.p,{children:["If you're using kotlinx.serialization, you need to depend on the\n",(0,n.jsx)(i.code,{children:"arrow-core-serialization"})," with the same version of your ",(0,n.jsx)(i.code,{children:"arrow-core"}),".\nDeclare your serializable types as usual. However, when one of the fields\nmentions a type from Arrow Core,"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"@Serializable\ndata class Book(val title: String, val authors: NonEmptyList<String>)\n"})}),"\n",(0,n.jsxs)(i.p,{children:['you need to "import" the serializer into the file. The easiest way is to\ninclude a ',(0,n.jsx)(i.code,{children:"UseSerializers"})," annotation at the very top."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"@file:UseSerializers(\n  EitherSerializer::class,\n  IorSerializer::class,\n  ValidatedSerializer::class,\n  OptionSerializer::class,\n  NonEmptyListSerializer::class,\n  NonEmptySetSerializer::class\n)\n"})}),"\n",(0,n.jsx)(i.p,{children:"The list above mentions all the serializers, but you only need to add those\nwhich are used in your fields. Don't worry too much: if you miss one, the\nkotlinx.serialization plug-in gives you an error."}),"\n",(0,n.jsx)(i.admonition,{title:"Additional reading",type:"info",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"https://garthgilmour.medium.com/marshalling-arrow-types-in-ktor-bc471aa3650",children:(0,n.jsx)(i.em,{children:"Marshalling Arrow Types in Ktor"})}),"\nby Garth Gilmour includes additional information about using Arrow Core types\nin a Ktor project."]})}),"\n",(0,n.jsx)(i.h2,{id:"jackson",children:(0,n.jsx)(i.a,{href:"https://github.com/FasterXML/jackson",children:"Jackson"})}),"\n",(0,n.jsxs)(i.p,{children:["If you're using Jackson for serialization, ",(0,n.jsx)(i.a,{href:"https://github.com/arrow-kt/arrow-integrations#jackson-module",children:"this module"}),"\nadds support for Arrow types. You just need to call an additional method when\ncreating the mapper."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-kotlin",children:"val mapper = ObjectMapper()\n    .registerKotlinModule()\n    .registerArrowModule()   // <- this is the one\n"})})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,i,r)=>{r.d(i,{Z:()=>s,a:()=>a});var n=r(67294);const t={},o=n.createContext(t);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);