"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[523],{62246:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(85893),r=n(11151);const i={title:"Functional Flowing",image:"https://img.youtube.com/vi/Mj9B0rhN1RE/maxresdefault.jpg",category:"videos",tags:["core","videos"],link:"https://youtu.be/Mj9B0rhN1RE"},a=void 0,l={permalink:"/community/blog/2022/12/01/functional-flowing",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2022-12-01-functional-flowing.md",source:"@site/content/blog/2022-12-01-functional-flowing.md",title:"Functional Flowing",description:"Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way.",date:"2022-12-01T00:00:00.000Z",tags:[{label:"core",permalink:"/community/blog/tags/core"},{label:"videos",permalink:"/community/blog/tags/videos"}],readingTime:.125,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Functional Flowing",image:"https://img.youtube.com/vi/Mj9B0rhN1RE/maxresdefault.jpg",category:"videos",tags:["core","videos"],link:"https://youtu.be/Mj9B0rhN1RE"},unlisted:!1,prevItem:{title:"Functional Error Handling - A Practical Approach",permalink:"/community/blog/2022/12/01/functional-error-handling"},nextItem:{title:"Graceful Shutdown with Structured Concurrency",permalink:"/community/blog/2022/12/01/graceful-shutdown-structured-concurrency"}},c={authorsImageUrls:[]},s=[];function u(t){const e={p:"p",...(0,r.a)(),...t.components};return(0,o.jsx)(e.p,{children:"Simon Vergauwen shows how to leverage KotlinX Flow to describe powerful programs and build pipelines to transform and manipulate data in an efficient streaming way."})}function m(t={}){const{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},11151:(t,e,n)=>{n.d(e,{Z:()=>l,a:()=>a});var o=n(67294);const r={},i=o.createContext(r);function a(t){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),o.createElement(i.Provider,{value:e},t.children)}}}]);