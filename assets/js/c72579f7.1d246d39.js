"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[1938],{96908:(t,o,a)=>{a.r(o),a.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var e=a(85893),n=a(11151);const r={title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-monad"},i=void 0,s={permalink:"/community/blog/2020/01/29/monads-and-composition-with-arrow-fx",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2020-01-29-monads-and-composition-with-arrow-fx.md",source:"@site/content/blog/2020-01-29-monads-and-composition-with-arrow-fx.md",title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",description:"Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started",date:"2020-01-29T00:00:00.000Z",tags:[{label:"fx",permalink:"/community/blog/tags/fx"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.235,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-monad"},unlisted:!1,prevItem:{title:"Kotlin Functional Programming: Cleaner Composition with Monad Comprehensions in Arrow Fx",permalink:"/community/blog/2020/01/29/cleaner-composition-with-monad-comprehensions-arrow-fx"},nextItem:{title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",permalink:"/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx"}},l={authorsImageUrls:[]},c=[];function m(t){const o={p:"p",...(0,n.a)(),...t.components};return(0,e.jsx)(o.p,{children:"Arrow is a library created by folks over at a company called  47 degrees . In a nutshell, Arrow brings a slew of functional programming features to Kotlin. It is heavily inspired by Scala and Haskell, and emphasizes a lot of the concepts that those languages started"})}function d(t={}){const{wrapper:o}={...(0,n.a)(),...t.components};return o?(0,e.jsx)(o,{...t,children:(0,e.jsx)(m,{...t})}):m(t)}},11151:(t,o,a)=>{a.d(o,{Z:()=>s,a:()=>i});var e=a(67294);const n={},r=e.createContext(n);function i(t){const o=e.useContext(r);return e.useMemo((function(){return"function"==typeof t?t(o):{...o,...t}}),[o,t])}function s(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:i(t.components),e.createElement(r.Provider,{value:o},t.children)}}}]);