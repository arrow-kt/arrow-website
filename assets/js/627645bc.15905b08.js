"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[2271],{33594:(t,o,r)=>{r.r(o),r.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>w,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var e=r(85893),a=r(11151);const n={title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-parallel"},i=void 0,l={permalink:"/community/blog/2020/01/29/parallel-processing-the-functional-way-with-arrow-fx",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2020-01-29-parallel-processing-the-functional-way-with-arrow-fx.md",source:"@site/content/blog/2020-01-29-parallel-processing-the-functional-way-with-arrow-fx.md",title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",description:"Learn how to handle parallel processing in Kotlin with Arrow IO monads.",date:"2020-01-29T00:00:00.000Z",tags:[{label:"fx",permalink:"/community/blog/tags/fx"},{label:"articles",permalink:"/community/blog/tags/articles"}],readingTime:.06,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Kotlin Functional Programming: Parallel Processing The Functional Way with Arrow Fx",image:"https://raw.githubusercontent.com/arrow-kt/arrow-site/master/docs/img/fx/arrow-fx-brand-sidebar.svg?sanitize=true",category:"articles",tags:["fx","articles"],link:"https://lambda.show/blog/arrow-io-parallel"},unlisted:!1,prevItem:{title:"Kotlin Functional Programming: Monads & Composition with Arrow Fx",permalink:"/community/blog/2020/01/29/monads-and-composition-with-arrow-fx"},nextItem:{title:"Arrow Comonad Approach for GameOfLife with Android Compose",permalink:"/community/blog/2020/01/14/Arrow-Comonad-Android-Compose-gameOfLife"}},s={authorsImageUrls:[]},c=[];function m(t){const o={p:"p",...(0,a.a)(),...t.components};return(0,e.jsx)(o.p,{children:"Learn how to handle parallel processing in Kotlin with Arrow IO monads."})}function w(t={}){const{wrapper:o}={...(0,a.a)(),...t.components};return o?(0,e.jsx)(o,{...t,children:(0,e.jsx)(m,{...t})}):m(t)}},11151:(t,o,r)=>{r.d(o,{Z:()=>l,a:()=>i});var e=r(67294);const a={},n=e.createContext(a);function i(t){const o=e.useContext(n);return e.useMemo((function(){return"function"==typeof t?t(o):{...o,...t}}),[o,t])}function l(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),e.createElement(n.Provider,{value:o},t.children)}}}]);